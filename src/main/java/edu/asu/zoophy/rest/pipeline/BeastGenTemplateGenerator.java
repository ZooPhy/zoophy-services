package edu.asu.zoophy.rest.pipeline;

import java.io.FileNotFoundException;
import java.io.PrintWriter;
import java.io.UnsupportedEncodingException;

public class BeastGenTemplateGenerator {
	
	public void templateGenerator(String jobWorkDir, String subModel, String clockModel, String prior, Boolean gamma, Boolean invarient) throws BeastException {
		PrintWriter writer;
		String text = templateGen(subModel, clockModel, prior, gamma, invarient);
		try {
			writer = new PrintWriter(jobWorkDir + "beastgen.template", "UTF-8");
			writer.write(text);
			writer.close();
		} catch (FileNotFoundException e) {
			throw new BeastException("BEAST process failed: "+e.getMessage(), "Failed to generate beastGen template");
		} catch (UnsupportedEncodingException e) {
			throw new BeastException("BEAST process failed: "+e.getMessage(), "Failed to generate beastGen template");
		}
	}

	 
	 private String templateGen(String subModel, String clockModel, String prior, Boolean gamma, Boolean invarient) {
		 StringBuilder stringBuilder = new StringBuilder();
		 String template = "<?xml version=\"1.0\" standalone=\"yes\"?>\n" + 
		 		"\n" + 
		 		"<!-- Generated by BEAUTi v1.8.4                                              -->\n" + 
		 		"<!--       by Alexei J. Drummond, Andrew Rambaut and Marc A. Suchard         -->\n" + 
		 		"<!--       Department of Computer Science, University of Auckland and        -->\n" + 
		 		"<!--       Institute of Evolutionary Biology, University of Edinburgh        -->\n" + 
		 		"<!--       David Geffen School of Medicine, University of California, Los Angeles-->\n" + 
		 		"<!--       http://beast.bio.ed.ac.uk/                                        -->\n" + 
		 		"<beast>\n";
		 
		 String end  = "\n</beast>";
		 
		 stringBuilder.append(template);
		 stringBuilder.append(taxa());
		 stringBuilder.append(alignment());
		 stringBuilder.append(patterns());
		 stringBuilder.append(constantSize());
		 stringBuilder.append(coalescentSimulator());
		 stringBuilder.append(treeModel());
		 stringBuilder.append(likelihood(prior));
		 stringBuilder.append(branchRates(clockModel));
		 stringBuilder.append(model(subModel));
		 stringBuilder.append(siteModel(subModel, gamma, invarient));
		 stringBuilder.append(treeLikelihood(clockModel));
		 stringBuilder.append(operators(subModel, clockModel, prior, gamma, invarient));
		 stringBuilder.append(mcmc(subModel, clockModel, prior, gamma, invarient));
		 stringBuilder.append(end);
		 
		 return stringBuilder.toString();
	 }
	 
	 private String taxa() {
		 String taxa = "\n	<!-- The list of taxa to be analysed (can also include dates/ages).          -->\n" + 
		 		"	<taxa id=\"taxa\">\n" + 
		 		"		<#list taxa as taxon>\n" + 
		 		"			<taxon id=\"${taxon.id}\">\n" + 
		 		"			    <date value=\"${taxon.date}\" direction=\"forwards\" units=\"years\"/>\n" + 
		 		"			</taxon>\n" + 
		 		"		</#list>\n" + 
		 		"	</taxa>\n";
		 return taxa;
	 }
	 
	 private String alignment() {
		 String alignment = "\n	<!-- The sequence alignment (each sequence refers to a taxon above).         -->\n" + 
		 		"	<alignment id=\"${alignment.id}\" dataType=\"nucleotide\">\n" + 
		 		"		<#list alignment.sequences as sequence>\n" + 
		 		"			<sequence>\n" + 
		 		"			    <taxon idref=\"${sequence.taxon.id}\"/>\n" + 
		 		"			    ${sequence.data}\n" + 
		 		"			</sequence>\n" + 
		 		"		</#list>\n" + 
		 		"	</alignment>\n";
		 return alignment;
	 }
	 
	 private String patterns() {
		 String patterns = "\n	<!-- The unique patterns from 1 to end                                       -->\n" + 
		 		"	<!-- npatterns=?                                                           -->\n" + 
		 		"	<patterns id=\"patterns\" from=\"1\" strip=\"false\">\n" + 
		 		"		<alignment idref=\"alignment\"/>\n" + 
		 		"	</patterns>\n";
		 return patterns;
	 }
	 
	 private String constantSize() {
		 String constantSize = "\n	<!-- A prior assumption that the population size has remained constant       -->\n" + 
		 		"	<!-- throughout the time spanned by the genealogy.                           -->\n" + 
		 		"	<constantSize id=\"constant\" units=\"years\">\n" + 
		 		"		<populationSize>\n" + 
		 		"			<parameter id=\"constant.popSize\" value=\"1.0\" lower=\"0.0\"/>\n" + 
		 		"		</populationSize>\n" + 
		 		"	</constantSize>\n";
		 return constantSize;
	 }
	 
	 private String coalescentSimulator() {
		 String coalescentSimulator = "\n	<!-- Generate a random starting tree under the coalescent process            -->\n" + 
		 		"	<coalescentSimulator id=\"startingTree\">\n" + 
		 		"		<taxa idref=\"taxa\"/>\n" + 
		 		"		<constantSize idref=\"constant\"/>\n" + 
		 		"	</coalescentSimulator>\n";
		 return coalescentSimulator;
	 }
	 
	 private String treeModel() {
		 String treeModel = "\n	<!-- Generate a tree model                                                   -->\n" + 
		 		"	<treeModel id=\"treeModel\">\n" + 
		 		"		<coalescentTree idref=\"startingTree\"/>\n" + 
		 		"		<rootHeight>\n" + 
		 		"			<parameter id=\"treeModel.rootHeight\"/>\n" + 
		 		"		</rootHeight>\n" + 
		 		"		<nodeHeights internalNodes=\"true\">\n" + 
		 		"			<parameter id=\"treeModel.internalNodeHeights\"/>\n" + 
		 		"		</nodeHeights>\n" + 
		 		"		<nodeHeights internalNodes=\"true\" rootNode=\"true\">\n" + 
		 		"			<parameter id=\"treeModel.allInternalNodeHeights\"/>\n" + 
		 		"		</nodeHeights>\n" + 
		 		"	</treeModel>\n";
		 return treeModel;
	 }
	 
	 private String likelihood(String prior) {
		 String PRIOR_SKYLINE = "\n	<!-- Generate a generalizedSkyLineLikelihood for Bayesian Skyline            -->\n" + 
		 		"	<generalizedSkyLineLikelihood id=\"skyline\" linear=\"false\">\n" + 
		 		"		<populationSizes>\n" + 
		 		"			<parameter id=\"skyline.popSize\" dimension=\"10\" value=\"1.0\" lower=\"0.0\"/>\n" + 
		 		"		</populationSizes>\n" + 
		 		"		<groupSizes>\n" + 
		 		"			<parameter id=\"skyline.groupSize\" dimension=\"10\"/>\n" + 
		 		"		</groupSizes>\n" + 
		 		"		<populationTree>\n" + 
		 		"			<treeModel idref=\"treeModel\"/>\n" + 
		 		"		</populationTree>\n" + 
		 		"	</generalizedSkyLineLikelihood>\n" + 
		 		"	<exponentialMarkovLikelihood id=\"eml1\" jeffreys=\"true\">\n" + 
		 		"		<chainParameter>\n" + 
		 		"			<parameter idref=\"skyline.popSize\"/>\n" + 
		 		"		</chainParameter>\n" + 
		 		"	</exponentialMarkovLikelihood>\n";
		 
		 String PRIOR_CONSTANT = "\n	<!-- Generate a coalescent likelihood                                        -->\n" + 
		 		"	<coalescentLikelihood id=\"coalescent\">\n" + 
		 		"		<model>\n" + 
		 		"			<constantSize idref=\"constant\"/>\n" + 
		 		"		</model>\n" + 
		 		"		<populationTree>\n" + 
		 		"			<treeModel idref=\"treeModel\"/>\n" + 
		 		"		</populationTree>\n" + 
		 		"	</coalescentLikelihood>\n";
		 
		 String PRIOR_SKYGRID = "\n	<!-- Generate a gmrfSkyGridLikelihood for the Bayesian SkyGrid process       -->\n" + 
		 		"	<gmrfSkyGridLikelihood id=\"skygrid\">\n" + 
		 		"		<populationSizes>\n" + 
		 		"\n" + 
		 		"			<!-- skygrid.logPopSize is in log units unlike other popSize                 -->\n" + 
		 		"			<parameter id=\"skygrid.logPopSize\" dimension=\"50\" value=\"1.0\"/>\n" + 
		 		"		</populationSizes>\n" + 
		 		"		<precisionParameter>\n" + 
		 		"			<parameter id=\"skygrid.precision\" value=\"0.1\" lower=\"0.0\"/>\n" + 
		 		"		</precisionParameter>\n" + 
		 		"		<numGridPoints>\n" + 
		 		"			<parameter id=\"skygrid.numGridPoints\" value=\"49.0\"/>\n" + 
		 		"		</numGridPoints>\n" + 
		 		"		<cutOff>\n" + 
		 		"			<parameter id=\"skygrid.cutOff\" value=\"10.0\"/>\n" + 
		 		"		</cutOff>\n" + 
		 		"		<populationTree>\n" + 
		 		"			<treeModel idref=\"treeModel\"/>\n" + 
		 		"		</populationTree>\n" + 
		 		"	</gmrfSkyGridLikelihood>\n";
		 
		 switch(prior) {
		 	case "Constant":
		 		return PRIOR_CONSTANT;
		 	case "Skyline":
		 		return PRIOR_SKYLINE;
		 	case "Skygrid":
		 		return PRIOR_SKYGRID;
		 	default:
		 		return "";
		 }
	 }
	 
	 private String branchRates(String clockModel) {
		 String CLOCK_STRICT = "\n	<!-- The strict clock (Uniform rates across branches)                        -->\n" + 
		 		"	<strictClockBranchRates id=\"${filename_stem}.branchRates\">\n" + 
		 		"		<rate>\n" + 
		 		"			<parameter id=\"${filename_stem}.clock.rate\" value=\"1.0\" lower=\"0.0\"/>\n" + 
		 		"		</rate>\n" + 
		 		"	</strictClockBranchRates>\n" + 
		 		"	<rateStatistic id=\"${filename_stem}.meanRate\" name=\"${filename_stem}.meanRate\" mode=\"mean\" internal=\"true\" external=\"true\">\n" + 
		 		"		<treeModel idref=\"treeModel\"/>\n" + 
		 		"		<strictClockBranchRates idref=\"${filename_stem}.branchRates\"/>\n" + 
		 		"	</rateStatistic>\n";
		 
		 String CLOCK_RELAXED = "\n<!-- The uncorrelated relaxed clock (Drummond, Ho, Phillips & Rambaut (2006) PLoS Biology 4, e88 )-->\n" + 
		 		"	<discretizedBranchRates id=\"${filename_stem}.branchRates\">\n" + 
		 		"		<treeModel idref=\"treeModel\"/>\n" + 
		 		"		<distribution>\n" + 
		 		"			<logNormalDistributionModel meanInRealSpace=\"true\">\n" + 
		 		"				<mean>\n" + 
		 		"					<parameter id=\"${filename_stem}.ucld.mean\" value=\"1.0\" lower=\"0.0\"/>\n" + 
		 		"				</mean>\n" + 
		 		"				<stdev>\n" + 
		 		"					<parameter id=\"${filename_stem}.ucld.stdev\" value=\"0.3333333333333333\" lower=\"0.0\"/>\n" + 
		 		"				</stdev>\n" + 
		 		"			</logNormalDistributionModel>\n" + 
		 		"		</distribution>\n" + 
		 		"		<rateCategories>\n" + 
		 		"			<parameter id=\"${filename_stem}.branchRates.categories\"/>\n" + 
		 		"		</rateCategories>\n" + 
		 		"	</discretizedBranchRates>\n" + 
		 		"	<rateStatistic id=\"${filename_stem}.meanRate\" name=\"${filename_stem}.meanRate\" mode=\"mean\" internal=\"true\" external=\"true\">\n" + 
		 		"		<treeModel idref=\"treeModel\"/>\n" + 
		 		"		<discretizedBranchRates idref=\"${filename_stem}.branchRates\"/>\n" + 
		 		"	</rateStatistic>\n" + 
		 		"	<rateStatistic id=\"${filename_stem}.coefficientOfVariation\" name=\"${filename_stem}.coefficientOfVariation\" mode=\"coefficientOfVariation\" internal=\"true\" external=\"true\">\n" + 
		 		"		<treeModel idref=\"treeModel\"/>\n" + 
		 		"		<discretizedBranchRates idref=\"${filename_stem}.branchRates\"/>\n" + 
		 		"	</rateStatistic>\n" + 
		 		"	<rateCovarianceStatistic id=\"${filename_stem}.covariance\" name=\"${filename_stem}.covariance\">\n" + 
		 		"		<treeModel idref=\"treeModel\"/>\n" + 
		 		"		<discretizedBranchRates idref=\"${filename_stem}.branchRates\"/>\n" + 
		 		"	</rateCovarianceStatistic>\n";
		 
		 switch(clockModel) {
		 	case "Strict":
		 		return CLOCK_STRICT;
		 	case "Relaxed":
		 		return CLOCK_RELAXED;
		 	default:
		 		return CLOCK_RELAXED;
		 }
	 }
	 
	 private String model(String subModel) {
		 String HKY = "\n	<!-- The HKY substitution model (Hasegawa, Kishino & Yano, 1985)             -->\n" + 
		 		"	<HKYModel id=\"hky\">\n" + 
		 		"		<frequencies>\n" + 
		 		"			<frequencyModel dataType=\"nucleotide\">\n" + 
		 		"				<frequencies>\n" + 
		 		"					<parameter id=\"frequencies\" value=\"0.25 0.25 0.25 0.25\"/>\n" + 
		 		"				</frequencies>\n" + 
		 		"			</frequencyModel>\n" + 
		 		"		</frequencies>\n" + 
		 		"		<kappa>\n" + 
		 		"			<parameter id=\"kappa\" value=\"2.0\" lower=\"0.0\"/>\n" + 
		 		"		</kappa>\n" + 
		 		"	</HKYModel>\n" + 
		 		"\n";
		 
		 String GTR = "\n	<!-- The general time reversible (GTR) substitution model                    -->\n" + 
		 		"	<gtrModel id=\"gtr\">\n" + 
		 		"		<frequencies>\n" + 
		 		"			<frequencyModel dataType=\"nucleotide\">\n" + 
		 		"				<frequencies>\n" + 
		 		"					<parameter id=\"frequencies\" value=\"0.25 0.25 0.25 0.25\"/>\n" + 
		 		"				</frequencies>\n" + 
		 		"			</frequencyModel>\n" + 
		 		"		</frequencies>\n" + 
		 		"		<rateAC>\n" + 
		 		"			<parameter id=\"ac\" value=\"1.0\" lower=\"0.0\"/>\n" + 
		 		"		</rateAC>\n" + 
		 		"		<rateAG>\n" + 
		 		"			<parameter id=\"ag\" value=\"1.0\" lower=\"0.0\"/>\n" + 
		 		"		</rateAG>\n" + 
		 		"		<rateAT>\n" + 
		 		"			<parameter id=\"at\" value=\"1.0\" lower=\"0.0\"/>\n" + 
		 		"		</rateAT>\n" + 
		 		"		<rateCG>\n" + 
		 		"			<parameter id=\"cg\" value=\"1.0\" lower=\"0.0\"/>\n" + 
		 		"		</rateCG>\n" + 
		 		"		<rateGT>\n" + 
		 		"			<parameter id=\"gt\" value=\"1.0\" lower=\"0.0\"/>\n" + 
		 		"		</rateGT>\n" + 
		 		"	</gtrModel>\n" + 
		 		"\n";
		 
		 switch(subModel) {
		 	case "GTR":
		 		return GTR;
		 	case "HKY":
		 		return HKY;
		 	default:
		 		return HKY;
		 }
	 }
	 
	 private String siteModel(String subModel, Boolean gamma, Boolean invarient) {
		 String siteModel = "	<!-- site model                                                              -->\n" + 
			 		"	<siteModel id=\"siteModel\">\n" + 
			 		"		<substitutionModel>\n" ;
		 
		 String GTR = "			<gtrModel idref=\"gtr\"/>\n" + 
			 		"		</substitutionModel>\n" + 
			 		"		<relativeRate>\n" + 
			 		"			<parameter id=\"mu\" value=\"1.0\" lower=\"0.0\"/>\n" + 
			 		"		</relativeRate>\n" ;
		 
		 String HKY ="			<HKYModel idref=\"hky\"/>\n" + 
			 		"		</substitutionModel>\n" + 
			 		"		<relativeRate>\n" + 
			 		"			<parameter id=\"mu\" value=\"1.0\" lower=\"0.0\"/>\n" + 
			 		"		</relativeRate>\n";
		 switch(subModel) {
		 	case "GTR":
		 		siteModel += GTR;
		 		break;
		 	case "HKY":
		 		siteModel += HKY;
		 		break;
		 }
		 
		 String GAMMA = "		<gammaShape gammaCategories=\"4\">\n" + 
		 		"			<parameter id=\"alpha\" value=\"0.5\" lower=\"0.0\"/>\n" + 
		 		"		</gammaShape>\n";
		 if(gamma) {
			 siteModel += GAMMA;
		 }
		 
		 String Invarient = "		<proportionInvariant>\n" + 
		 		"			<parameter id=\"pInv\" value=\"0.5\" lower=\"0.0\" upper=\"1.0\"/>\n" + 
		 		"		</proportionInvariant>\n";
		 if(invarient) {
			 siteModel += Invarient;
		 }
		 
		 String end  = "	</siteModel>\n";
		 siteModel += end;
		 return siteModel;
	 }
	 
	 private String treeLikelihood(String clockModel) {
		 String CLOCK_STRICT = "\n	<!-- Likelihood for tree given sequence data                                 -->\n" + 
		 		"	<treeLikelihood id=\"treeLikelihood\" useAmbiguities=\"false\">\n" + 
		 		"		<patterns idref=\"patterns\"/>\n" + 
		 		"		<treeModel idref=\"treeModel\"/>\n" + 
		 		"		<siteModel idref=\"siteModel\"/>\n" + 
		 		"		<strictClockBranchRates idref=\"${filename_stem}.branchRates\"/>\n" + 
		 		"	</treeLikelihood>\n";
		 
		 String CLOCK_RELAXED = "\n	<!-- Likelihood for tree given sequence data                                 -->\n" + 
		 		"	<treeLikelihood id=\"treeLikelihood\" useAmbiguities=\"false\">\n" + 
		 		"		<patterns idref=\"patterns\"/>\n" + 
		 		"		<treeModel idref=\"treeModel\"/>\n" + 
		 		"		<siteModel idref=\"siteModel\"/>\n" + 
		 		"		<discretizedBranchRates idref=\"${filename_stem}.branchRates\"/>\n" + 
		 		"	</treeLikelihood>\n";
		 
		 switch(clockModel) {
		 	case "Strict":
		 		return CLOCK_STRICT;
		 	case "Relaxed":
		 		return CLOCK_RELAXED;
		 	default:
		 		return "";
		 }
	 }
	 
	 private String operators(String subModel, String clockModel, String prior, Boolean gamma, Boolean invarient) {
		 String operators = "\n	<!-- Define operators                                                        -->\n" + 
		 		"	<operators id=\"operators\" optimizationSchedule=\"log\">\n";
		 
		 String HKY = "		<scaleOperator scaleFactor=\"0.75\" weight=\"1\">\n" + 
		 		"			<parameter idref=\"kappa\"/>\n" + 
		 		"		</scaleOperator>";
		 
		 String GTR = "		<scaleOperator scaleFactor=\"0.75\" weight=\"1\">\n" + 
		 		"			<parameter idref=\"ac\"/>\n" + 
		 		"		</scaleOperator>\n" + 
		 		"		<scaleOperator scaleFactor=\"0.75\" weight=\"1\">\n" + 
		 		"			<parameter idref=\"ag\"/>\n" + 
		 		"		</scaleOperator>\n" + 
		 		"		<scaleOperator scaleFactor=\"0.75\" weight=\"1\">\n" + 
		 		"			<parameter idref=\"at\"/>\n" + 
		 		"		</scaleOperator>\n" + 
		 		"		<scaleOperator scaleFactor=\"0.75\" weight=\"1\">\n" + 
		 		"			<parameter idref=\"cg\"/>\n" + 
		 		"		</scaleOperator>\n" + 
		 		"		<scaleOperator scaleFactor=\"0.75\" weight=\"1\">\n" + 
		 		"			<parameter idref=\"gt\"/>\n" + 
		 		"		</scaleOperator>";
		 
		 switch(subModel) {
		 	case "GTR":
		 		operators += GTR;
		 		break;
		 	case "HKY":
		 		operators += HKY;
		 		break;
		 }
		 
		 String common = "\n		<deltaExchange delta=\"0.01\" weight=\"1\">\n" + 
		 		"			<parameter idref=\"frequencies\"/>\n" + 
		 		"		</deltaExchange>\n";  
		 operators += common;
		 
		 String GAMMA = "		<scaleOperator scaleFactor=\"0.75\" weight=\"1\">\n" + 
		 		"			<parameter idref=\"alpha\"/>\n" + 
		 		"		</scaleOperator>\n";
		 if(gamma) {
			 operators += GAMMA;
		 }
		 
		 String Invarient = "		<randomWalkOperator windowSize=\"0.75\" weight=\"1\" boundaryCondition=\"logit\">\n" + 
		 		"			<parameter idref=\"pInv\"/>\n" + 
		 		"		</randomWalkOperator>\n";
		 if(invarient) {
			 operators += Invarient;
		 }
		 
		 String CLOCK_STRICT = "		<scaleOperator scaleFactor=\"0.75\" weight=\"3\">\n" + 
		 		"			<parameter idref=\"${filename_stem}.clock.rate\"/>\n" + 
		 		"		</scaleOperator>\n";
		 
		 String CLOCK_RELAXED = "		<scaleOperator scaleFactor=\"0.75\" weight=\"3\">\n" + 
			 		"			<parameter idref=\"${filename_stem}.ucld.mean\"/>\n" + 
			 		"		</scaleOperator>\n" + 
			 		"		<scaleOperator scaleFactor=\"0.75\" weight=\"3\">\n" + 
			 		"			<parameter idref=\"${filename_stem}.ucld.stdev\"/>\n" + 
			 		"		</scaleOperator>\n" ;
		 
		 switch(clockModel) {
		 	case "Strict":
		 		operators += CLOCK_STRICT;
		 		break;
		 	case "Relaxed":
		 		operators += CLOCK_RELAXED;
		 		break;
		 }
		 
		 String common1 = "		<subtreeSlide size=\"1.0\" gaussian=\"true\" weight=\"15\">\n" + 
			 		"			<treeModel idref=\"treeModel\"/>\n" + 
			 		"		</subtreeSlide>\n" + 
			 		"		<narrowExchange weight=\"15\">\n" + 
			 		"			<treeModel idref=\"treeModel\"/>\n" + 
			 		"		</narrowExchange>\n" + 
			 		"		<wideExchange weight=\"3\">\n" + 
			 		"			<treeModel idref=\"treeModel\"/>\n" + 
			 		"		</wideExchange>\n" + 
			 		"		<wilsonBalding weight=\"3\">\n" + 
			 		"			<treeModel idref=\"treeModel\"/>\n" + 
			 		"		</wilsonBalding>\n" + 
			 		"		<scaleOperator scaleFactor=\"0.75\" weight=\"3\">\n" + 
			 		"			<parameter idref=\"treeModel.rootHeight\"/>\n" + 
			 		"		</scaleOperator>\n" + 
			 		"		<uniformOperator weight=\"30\">\n" + 
			 		"			<parameter idref=\"treeModel.internalNodeHeights\"/>\n" + 
			 		"		</uniformOperator>\n";
		 
		 operators += common1;
		 
		 String PRIOR_SKYGRID = "		<gmrfGridBlockUpdateOperator scaleFactor=\"1.0\" weight=\"2\">\n" + 
		 		"			<gmrfSkyrideLikelihood idref=\"skygrid\"/>\n" + 
		 		"		</gmrfGridBlockUpdateOperator>\n" + 
		 		"		<scaleOperator scaleFactor=\"0.75\" weight=\"1\">\n" + 
		 		"			<parameter idref=\"skygrid.precision\"/>\n" + 
		 		"		</scaleOperator>";
		 
		 String PRIOR_SKYLINE = "		<scaleOperator scaleFactor=\"0.75\" weight=\"15\">\n" + 
		 		"			<parameter idref=\"skyline.popSize\"/>\n" + 
		 		"		</scaleOperator>\n" + 
		 		"		<deltaExchange delta=\"1\" integer=\"true\" weight=\"6\" autoOptimize=\"false\">\n" + 
		 		"			<parameter idref=\"skyline.groupSize\"/>\n" + 
		 		"		</deltaExchange>";
		 
		 String PRIOR_CONSTANT = "		<scaleOperator scaleFactor=\"0.75\" weight=\"3\">\n" + 
		 		"			<parameter idref=\"constant.popSize\"/>\n" + 
		 		"		</scaleOperator>";
		 
		 switch(prior) {
		 	case "Constant":
		 		operators += PRIOR_CONSTANT;
		 		break;
		 	case "Skyline":
		 		operators += PRIOR_SKYLINE;
		 		break;
		 	case "Skygrid":
		 		operators += PRIOR_SKYGRID;
		 		break;
		 }
		 
		 String CLOCK_STRICT1 = "\n		<upDownOperator scaleFactor=\"0.75\" weight=\"3\">\n" + 
		 		"			<up>\n" + 
		 		"				<parameter idref=\"${filename_stem}.clock.rate\"/>\n" + 
		 		"			</up>\n" + 
		 		"			<down>\n" + 
		 		"				<parameter idref=\"treeModel.allInternalNodeHeights\"/>\n" + 
		 		"			</down>\n" + 
		 		"		</upDownOperator>\n";
		 
		 String CLOCK_RELAXED1 = "\n<upDownOperator scaleFactor=\"0.75\" weight=\"3\">\n" + 
		 		"			<up>\n" + 
		 		"				<parameter idref=\"${filename_stem}.ucld.mean\"/>\n" + 
		 		"			</up>\n" + 
		 		"			<down>\n" + 
		 		"				<parameter idref=\"treeModel.allInternalNodeHeights\"/>\n" + 
		 		"			</down>\n" + 
		 		"		</upDownOperator>\n" + 
		 		"		<swapOperator size=\"1\" weight=\"10\" autoOptimize=\"false\">\n" + 
		 		"			<parameter idref=\"${filename_stem}.branchRates.categories\"/>\n" + 
		 		"		</swapOperator>\n" + 
		 		"		<uniformIntegerOperator weight=\"10\">\n" + 
		 		"			<parameter idref=\"${filename_stem}.branchRates.categories\"/>\n" + 
		 		"		</uniformIntegerOperator>\n";
		 
		 switch(clockModel) {
		 	case "Strict":
		 		operators += CLOCK_STRICT1;
		 		break;
		 	case "Relaxed":
		 		operators += CLOCK_RELAXED1;
		 		break;
		 }
		 
		 String end = "	</operators>\n";
		 
		 operators += end;
		 return operators;
	 }
	 
	 private String mcmc(String subModel, String clockModel, String prior, Boolean gamma, Boolean invarient) {
		 String mcmc = "\n	<!-- Define MCMC                                                             -->\n" + 
		 		"	<mcmc id=\"mcmc\" chainLength=\"${chain_length}\" autoOptimize=\"true\" operatorAnalysis=\"${filename_stem}.ops\">\n";
		 String end = "\n	</mcmc>";
		 mcmc += posterior(subModel, clockModel, prior, gamma, invarient);
		 mcmc += logScreen(clockModel);
		 mcmc += logFile(subModel, clockModel, prior, gamma, invarient);
		 mcmc += logTree(clockModel);
		 mcmc += end;
		 mcmc += report();
		 return mcmc;
	 }
	 
	 private String posterior(String subModel, String clockModel, String prior, Boolean gamma, Boolean invarient) {
		 String posterior = "		<posterior id=\"posterior\">\n" + 
		 		"			<prior id=\"prior\">\n";
		 
		 String HKY = "				<logNormalPrior mean=\"1.0\" stdev=\"1.25\" offset=\"0.0\" meanInRealSpace=\"false\">\n" + 
			 		"					<parameter idref=\"kappa\"/>\n" + 
			 		"				</logNormalPrior>\n";
		 
		 String GTR = "				<gammaPrior shape=\"0.05\" scale=\"10.0\" offset=\"0.0\">\n" + 
			 		"					<parameter idref=\"ac\"/>\n" + 
			 		"				</gammaPrior>\n" + 
			 		"				<gammaPrior shape=\"0.05\" scale=\"20.0\" offset=\"0.0\">\n" + 
			 		"					<parameter idref=\"ag\"/>\n" + 
			 		"				</gammaPrior>\n" + 
			 		"				<gammaPrior shape=\"0.05\" scale=\"10.0\" offset=\"0.0\">\n" + 
			 		"					<parameter idref=\"at\"/>\n" + 
			 		"				</gammaPrior>\n" + 
			 		"				<gammaPrior shape=\"0.05\" scale=\"10.0\" offset=\"0.0\">\n" + 
			 		"					<parameter idref=\"cg\"/>\n" + 
			 		"				</gammaPrior>\n" + 
			 		"				<gammaPrior shape=\"0.05\" scale=\"10.0\" offset=\"0.0\">\n" + 
			 		"					<parameter idref=\"gt\"/>\n" + 
			 		"				</gammaPrior>\n";
		 
		 switch(subModel) {
		 	case "GTR":
		 		posterior += GTR;
		 		break;
		 	case "HKY":
		 		posterior += HKY;
		 		break;
		 }
		 
		 String common = "				<uniformPrior lower=\"0.0\" upper=\"1.0\">\n" + 
			 		"					<parameter idref=\"frequencies\"/>\n" + 
			 		"				</uniformPrior>\n";
		 
		 posterior += common;
		 
		 String GAMMA = "				<exponentialPrior mean=\"0.5\" offset=\"0.0\">\n" + 
		 		"					<parameter idref=\"alpha\"/>\n" + 
		 		"				</exponentialPrior>\n";
		 if(gamma) {
			 posterior += GAMMA;
		 }
		 
		 String Invarient = "					<uniformPrior lower=\"0.0\" upper=\"1.0\">\n" + 
		 		"					<parameter idref=\"pInv\"/>\n" + 
		 		"				</uniformPrior>\n";
		 if(invarient) {
			 posterior += Invarient;
		 }
		 
		 String CLOCK_STRICT = "				<ctmcScalePrior>\n" + 
		 		"					<ctmcScale>\n" + 
		 		"						<parameter idref=\"${filename_stem}.clock.rate\"/>\n" + 
		 		"					</ctmcScale>\n" + 
		 		"					<treeModel idref=\"treeModel\"/>\n" + 
		 		"				</ctmcScalePrior>\n";
		 
		 String CLOCK_RELAXED = "				<exponentialPrior mean=\"0.3333333333333333\" offset=\"0.0\">\n" + 
		 		"					<parameter idref=\"${filename_stem}.ucld.stdev\"/>\n" + 
		 		"				</exponentialPrior>\n" + 
		 		"				<ctmcScalePrior>\n" + 
		 		"					<ctmcScale>\n" + 
		 		"						<parameter idref=\"${filename_stem}.ucld.mean\"/>\n" + 
		 		"					</ctmcScale>\n" + 
		 		"					<treeModel idref=\"treeModel\"/>\n" + 
		 		"				</ctmcScalePrior>\n";
		 
		 switch(clockModel) {
		 	case "Strict":
		 		posterior += CLOCK_STRICT;
		 		break;
		 	case "Relaxed":
		 		posterior += CLOCK_RELAXED;
		 		break;
		 }
		 
		 String PRIOR_CONSTANT = "				<oneOnXPrior>\n" + 
		 		"					<parameter idref=\"constant.popSize\"/>\n" + 
		 		"				</oneOnXPrior>\n" + 
		 		"				<coalescentLikelihood idref=\"coalescent\"/>\n";
		 
		 String PRIOR_SKYLINE = "				<uniformPrior lower=\"0.0\" upper=\"1.0E100\">\n" + 
		 		"					<parameter idref=\"skyline.popSize\"/>\n" + 
		 		"				</uniformPrior>\n" + 
		 		"				<generalizedSkyLineLikelihood idref=\"skyline\"/>\n" + 
		 		"				<exponentialMarkovLikelihood idref=\"eml1\"/>\n";
		 
		 String PRIOR_SKYGRID = "				<gammaPrior shape=\"0.001\" scale=\"1000.0\" offset=\"0.0\">\n" + 
		 		"					<parameter idref=\"skygrid.precision\"/>\n" + 
		 		"				</gammaPrior>\n" + 
		 		"				<gmrfSkyGridLikelihood idref=\"skygrid\"/>\n";
		 
		 switch(prior) {
		 	case "Constant":
		 		posterior += PRIOR_CONSTANT;
		 		break;
		 	case "Skyline":
		 		posterior += PRIOR_SKYLINE;
		 		break;
		 	case "Skygrid":
		 		posterior += PRIOR_SKYGRID;
		 		break;
		 }
		 
		 String CLOCK_STRICT1 = "				<strictClockBranchRates idref=\"${filename_stem}.branchRates\"/>\n";
		 
		 String CLOCK_RELAXED1  = "				<discretizedBranchRates idref=\"${filename_stem}.branchRates\"/>\n";
		 
		 switch(clockModel) {
		 	case "Strict":
		 		posterior += CLOCK_STRICT1;
		 		break;
		 	case "Relaxed":
		 		posterior += CLOCK_RELAXED1;
		 		break;
		 }
		 
		 String end = "			</prior>\n" + 
		 		"			<likelihood id=\"likelihood\">\n" + 
		 		"				<treeLikelihood idref=\"treeLikelihood\"/>\n" + 
		 		"			</likelihood>\n" + 
		 		"		</posterior>\n" + 
		 		"		<operators idref=\"operators\"/>\n";
		 
		 posterior += end;
		 
		 return posterior;
	 }

	 private String logScreen(String clockModel) {
		 String logScreen = "\n		<!-- write log to screen                                                     -->\n" + 
		 		"		<log id=\"screenLog\" logEvery=\"${log_every}\">\n" + 
		 		"			<column label=\"Posterior\" dp=\"4\" width=\"12\">\n" + 
		 		"				<posterior idref=\"posterior\"/>\n" + 
		 		"			</column>\n" + 
		 		"			<column label=\"Prior\" dp=\"4\" width=\"12\">\n" + 
		 		"				<prior idref=\"prior\"/>\n" + 
		 		"			</column>\n" + 
		 		"			<column label=\"Likelihood\" dp=\"4\" width=\"12\">\n" + 
		 		"				<likelihood idref=\"likelihood\"/>\n" + 
		 		"			</column>\n" + 
		 		"			<column label=\"rootHeight\" sf=\"6\" width=\"12\">\n" + 
		 		"				<parameter idref=\"treeModel.rootHeight\"/>\n" + 
		 		"			</column>\n";
		 
		 String CLOCK_STRICT = "			<column label=\"${filename_stem}.clock.rate\" sf=\"6\" width=\"12\">\n" + 
		 		"				<parameter idref=\"${filename_stem}.clock.rate\"/>\n" + 
		 		"			</column>\n" + 
		 		"		</log>\n";
		 
		 String CLOCK_RELAXED = "			<column label=\"${filename_stem}.ucld.mean\" sf=\"6\" width=\"12\">\n" + 
		 		"				<parameter idref=\"${filename_stem}.ucld.mean\"/>\n" + 
		 		"			</column>\n" + 
		 		"		</log>\n";
		 
		 
		 switch(clockModel) {
		 	case "Strict":
		 		logScreen += CLOCK_STRICT;
		 		break;
		 	case "Relaxed":
		 		logScreen += CLOCK_RELAXED;
		 		break;
		 }
		 
		 return logScreen;
	 }
	 
	 private String logFile(String subModel, String clockModel, String prior, Boolean gamma, Boolean invarient) {
		 String logFile = "\n		<!-- write log to file                                                       -->\n" + 
		 		"		<log id=\"fileLog\" logEvery=\"${log_every}\" fileName=\"${filename_stem}.log\" overwrite=\"false\">\n" + 
		 		"			<posterior idref=\"posterior\"/>\n" + 
		 		"			<prior idref=\"prior\"/>\n" + 
		 		"			<likelihood idref=\"likelihood\"/>\n" + 
		 		"			<parameter idref=\"treeModel.rootHeight\"/>\n";
		 
		 String PRIOR_CONSTANT = "			<parameter idref=\"constant.popSize\"/>\n";
		 
		 String PRIOR_SKYLINE = "			<parameter idref=\"skyline.popSize\"/>\n" + 
		 		"			<parameter idref=\"skyline.groupSize\"/>\n";
		 
		 String PRIOR_SKYGRID = "			<parameter idref=\"skygrid.precision\"/>\n" + 
		 		"			<parameter idref=\"skygrid.logPopSize\"/>\n" + 
		 		"			<parameter idref=\"skygrid.cutOff\"/>\n";
		 
		 switch(prior) {
		 	case "Constant":
		 		logFile += PRIOR_CONSTANT;
		 		break;
		 	case "Skyline":
		 		logFile += PRIOR_SKYLINE;
		 		break;
		 	case "Skygrid":
		 		logFile += PRIOR_SKYGRID;
		 		break;
		 }
		 
		 String HKY = "			<parameter idref=\"kappa\"/>\n";
		 
		 String GTR = "			<parameter idref=\"ac\"/>\n" + 
		 		"			<parameter idref=\"ag\"/>\n" + 
		 		"			<parameter idref=\"at\"/>\n" + 
		 		"			<parameter idref=\"cg\"/>\n" + 
		 		"			<parameter idref=\"gt\"/>\n";
		 
		 switch(subModel) {
		 	case "GTR":
		 		logFile += GTR;
		 		break;
		 	case "HKY":
		 		logFile += HKY;
		 		break;
		 }
		 
		 logFile += "			<parameter idref=\"frequencies\"/>\n" ;
		 
		 String GAMMA = "			<parameter idref=\"alpha\"/>\n";
		 if(gamma) {
			 logFile += GAMMA;
		 }
		 
		 String Invarient = "			<parameter idref=\"pInv\"/>\n";
		 if(invarient) {
			 logFile += Invarient;
		 }
		 
		 String CLOCK_STRICT = "			<parameter idref=\"${filename_stem}.clock.rate\"/>\n" + 
		 		"			<rateStatistic idref=\"${filename_stem}.meanRate\"/>\n" + 
		 		"			<treeLikelihood idref=\"treeLikelihood\"/>\n" + 
		 		"			<strictClockBranchRates idref=\"${filename_stem}.branchRates\"/>";
		 
		 String CLOCK_RELAXED = "			<parameter idref=\"${filename_stem}.ucld.mean\"/>\n" + 
		 		"			<parameter idref=\"${filename_stem}.ucld.stdev\"/>\n" + 
		 		"			<rateStatistic idref=\"${filename_stem}.meanRate\"/>\n" + 
		 		"			<rateStatistic idref=\"${filename_stem}.coefficientOfVariation\"/>\n" + 
		 		"			<rateCovarianceStatistic idref=\"${filename_stem}.covariance\"/>\n" + 
		 		"			<treeLikelihood idref=\"treeLikelihood\"/>\n" + 
		 		"			<discretizedBranchRates idref=\"${filename_stem}.branchRates\"/>";
		 
		 switch(clockModel) {
		 	case "Strict":
		 		logFile += CLOCK_STRICT;
		 		break;
		 	case "Relaxed":
		 		logFile += CLOCK_RELAXED;
		 		break;
		 }
		 
		 String PRIOR_CONSTANT1 = "\n			<coalescentLikelihood idref=\"coalescent\"/>";
		 
		 String PRIOR_SKYGRID1 = "\n			<gmrfSkyrideLikelihood idref=\"skygrid\"/>\n" + 
		 		"			<gmrfSkyGridLikelihood idref=\"skygrid\"/>";
		 
		 String PRIOR_SKYLINE1 = "\n			<generalizedSkyLineLikelihood idref=\"skyline\"/>";
		 
		 switch(prior) {
		 	case "Constant":
		 		logFile += PRIOR_CONSTANT1;
		 		break;
		 	case "Skyline":
		 		logFile += PRIOR_SKYLINE1;
		 		break;
		 	case "Skygrid":
		 		logFile += PRIOR_SKYGRID1;
		 		break;
		 }
		 
		 String end  = "\n		</log>\n";
		 logFile += end;
		 
		 return logFile;
	 }
	 
	 private String logTree(String clockModel) {
		 String logTree = "\n		<!-- write tree log to file                                                  -->\n" + 
		 		"		<logTree id=\"treeFileLog\" logEvery=\"${log_every}\" nexusFormat=\"true\" fileName=\"${filename_stem}.trees\" sortTranslationTable=\"true\">\n" + 
		 		"			<treeModel idref=\"treeModel\"/>\n" + 
		 		"			<trait name=\"rate\" tag=\"${filename_stem}.rate\">\n";
		 
		 String CLOCK_STRICT = "				<strictClockBranchRates idref=\"${filename_stem}.branchRates\"/>\n";
		  
		 String CLOCK_RELAXED = "				<discretizedBranchRates idref=\"${filename_stem}.branchRates\"/>\n";
		 
		 switch(clockModel) {
		 	case "Strict":
		 		logTree += CLOCK_STRICT;
		 		break;
		 	case "Relaxed":
		 		logTree += CLOCK_RELAXED;
		 		break;
		 }
		 
		 String end = "			</trait>\n" + 
		 		"			<posterior idref=\"posterior\"/>\n" + 
		 		"		</logTree>";
		 
		 logTree += end;
		 return logTree;
	 }
	 
	 private String report() {
		 String report = "\n	<report>\n" + 
		 		"		<property name=\"timer\">\n" + 
		 		"			<mcmc idref=\"mcmc\"/>\n" + 
		 		"		</property>\n" + 
		 		"	</report>\n";
		 
		 return report;
	 }
	 
}
